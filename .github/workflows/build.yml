name: SonarQube Cloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
    sonar:
      name: SonarQube Scan
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1

        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: '17'

        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

        # Compile the project before running SonarQube analysis
        - name: Build with Maven
          run: mvn -B compile

        # Run SonarQube scan
        - name: Run SonarQube scan
          run: mvn sonar:sonar -Dsonar.projectKey=DuserQ_Lab2ASW-udea -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    build:
      needs: sonar
      name: Build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1
        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: '17'
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build with Maven
          run: mvn -B package -DskipTests --file pom.xml
        - name: Upload JAR
          uses: actions/upload-artifact@v3
          with:
            name: artifact
            path: target/lab2-0.0.1-SNAPSHOT.jar
        - name: Build & push Docker image
          uses: mr-smithers-excellent/docker-build-push@v6
          with:
            image: vienna240/gitlab 
            tags: latest
            registry: docker.io
            dockerfile: Dockerfile
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

  # Test's job

    tests:
      name: Unit tests
      # Run on Ubuntu using the latest version
      runs-on: ubuntu-latest
      # Job's steps
      steps:
        # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        - uses: actions/checkout@v1

        # Set up JDK 17
        - name: Set up JDK
          uses: actions/setup-java@v1
          with:
            java-version: '17'

        # Set up Maven cache
        - name: Cache Maven packages
          # This action allows caching dependencies and build outputs to improve workflow execution time.
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

        # Run Tests
        - name: Run Tests
          run: mvn -B test


